window:
  width: 900
  height: 700
  title: "System Health Check - Visualised Designer Demo"
  background_color: "#f5f5f5"

controls:
  - type: label
    name: HeaderLabel
    caption: "üñ•Ô∏è  SYSTEM HEALTH MONITOR"
    x: 0
    y: 10
    width: 900
    height: 50
    font_size: 24
    font_bold: true
    foreground_color: "#2E7D32"
    alignment: center

  - type: label
    name: SubHeaderLabel
    caption: "Real-time system diagnostics powered by bash scripts"
    x: 0
    y: 60
    width: 900
    height: 25
    font_size: 12
    foreground_color: "#555555"
    alignment: center

  # System Info Panel
  - type: panel
    name: SystemInfoPanel
    x: 20
    y: 100
    width: 420
    height: 250
    background_color: "#ffffff"
    border_color: "#4CAF50"
    border_thickness: 2
    controls:
      - type: label
        name: SystemInfoHeader
        caption: "üíª SYSTEM INFORMATION"
        x: 10
        y: 10
        width: 400
        height: 30
        font_size: 14
        font_bold: true
        foreground_color: "#2E7D32"

      - type: button
        name: CheckHostnameBtn
        caption: "üè∑Ô∏è  Check Hostname"
        x: 20
        y: 50
        width: 180
        height: 35
        background_color: "#1976D2"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "üè∑Ô∏è  HOSTNAME CHECK"
          echo "======================================"
          echo "Hostname: $(hostname)"
          echo "FQDN: $(hostname -f 2>/dev/null || echo 'N/A')"
          echo "IP Address: $(hostname -I | awk '{print $1}')"
          echo "======================================"

      - type: button
        name: CheckUptimeBtn
        caption: "‚è±Ô∏è  Check Uptime"
        x: 220
        y: 50
        width: 180
        height: 35
        background_color: "#2196F3"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "‚è±Ô∏è  SYSTEM UPTIME"
          echo "======================================"
          uptime -p
          echo ""
          echo "System has been running:"
          uptime | awk -F'up ' '{print $2}' | awk -F',' '{print $1}'
          echo ""
          echo "Load Average: $(uptime | awk -F'load average:' '{print $2}')"
          echo "======================================"

      - type: button
        name: CheckOSBtn
        caption: "üêß OS Details"
        x: 20
        y: 95
        width: 180
        height: 35
        background_color: "#43A047"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "üêß OPERATING SYSTEM"
          echo "======================================"
          if [ -f /etc/os-release ]; then
            . /etc/os-release
            echo "Distribution: $NAME"
            echo "Version: $VERSION"
            echo "ID: $ID"
          else
            echo "OS: $(uname -s)"
          fi
          echo "Kernel: $(uname -r)"
          echo "Architecture: $(uname -m)"
          echo "======================================"

      - type: button
        name: CheckUserBtn
        caption: "üë§ Current User"
        x: 220
        y: 95
        width: 180
        height: 35
        background_color: "#66BB6A"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "üë§ USER INFORMATION"
          echo "======================================"
          echo "Current User: $(whoami)"
          echo "User ID: $(id -u)"
          echo "Group ID: $(id -g)"
          echo "Groups: $(groups)"
          echo "Home Directory: $HOME"
          echo "Shell: $SHELL"
          echo "======================================"

      - type: button
        name: CheckProcessesBtn
        caption: "üìä Process Count"
        x: 20
        y: 140
        width: 180
        height: 35
        background_color: "#FB8C00"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "üìä PROCESS STATISTICS"
          echo "======================================"
          echo "Total Processes: $(ps aux | wc -l)"
          echo "Running: $(ps aux | awk '$8 == "R" {count++} END {print count+0}')"
          echo "Sleeping: $(ps aux | awk '$8 == "S" {count++} END {print count+0}')"
          echo ""
          echo "Top 5 CPU Consumers:"
          ps aux --sort=-%cpu | head -6 | tail -5 | awk '{printf "  %s: %.1f%%\n", $11, $3}'
          echo "======================================"

      - type: button
        name: CheckTimeBtn
        caption: "üïê Date & Time"
        x: 220
        y: 140
        width: 180
        height: 35
        background_color: "#FF6F00"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "üïê DATE & TIME"
          echo "======================================"
          echo "Current Time: $(date '+%H:%M:%S')"
          echo "Current Date: $(date '+%Y-%m-%d')"
          echo "Timezone: $(date '+%Z %z')"
          echo "Unix Timestamp: $(date +%s)"
          echo ""
          echo "Calendar:"
          cal
          echo "======================================"

      - type: label
        name: SystemStatusLabel
        caption: "‚úÖ System Status: Online"
        x: 20
        y: 190
        width: 380
        height: 40
        font_size: 13
        font_bold: true
        foreground_color: "#2E7D32"
        alignment: center

  # Hardware Panel
  - type: panel
    name: HardwarePanel
    x: 460
    y: 100
    width: 420
    height: 250
    background_color: "#ffffff"
    border_color: "#2196F3"
    border_thickness: 2
    controls:
      - type: label
        name: HardwareHeader
        caption: "üîß HARDWARE RESOURCES"
        x: 10
        y: 10
        width: 400
        height: 30
        font_size: 14
        font_bold: true
        foreground_color: "#1565C0"

      - type: button
        name: CheckCPUBtn
        caption: "‚ö° CPU Info"
        x: 20
        y: 50
        width: 180
        height: 35
        background_color: "#E53935"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "‚ö° CPU INFORMATION"
          echo "======================================"
          echo "Model: $(lscpu | grep 'Model name' | cut -d':' -f2 | xargs)"
          echo "Cores: $(nproc)"
          echo "Threads: $(lscpu | grep '^CPU(s):' | awk '{print $2}')"
          echo "Architecture: $(lscpu | grep 'Architecture' | awk '{print $2}')"
          echo ""
          echo "Current CPU Usage:"
          top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print "  Busy: " 100 - $1"%"}'
          echo "======================================"

      - type: button
        name: CheckMemoryBtn
        caption: "üíæ Memory Usage"
        x: 220
        y: 50
        width: 180
        height: 35
        background_color: "#D81B60"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "üíæ MEMORY USAGE"
          echo "======================================"
          free -h | grep -E 'Mem|Swap'
          echo ""
          echo "Detailed:"
          total=$(free -m | awk 'NR==2{print $2}')
          used=$(free -m | awk 'NR==2{print $3}')
          percent=$((used * 100 / total))
          echo "  Total RAM: ${total}MB"
          echo "  Used: ${used}MB (${percent}%)"
          echo "  Available: $(free -h | awk 'NR==2{print $7}')"
          echo "======================================"

      - type: button
        name: CheckDiskBtn
        caption: "üíø Disk Space"
        x: 20
        y: 95
        width: 180
        height: 35
        background_color: "#8E24AA"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "üíø DISK SPACE"
          echo "======================================"
          df -h | grep -E '^/dev/' | awk '{printf "%-20s %5s / %5s (%s)\n", $1, $3, $2, $5}'
          echo ""
          echo "Root filesystem:"
          df -h / | tail -1 | awk '{print "  Size: "$2" | Used: "$3" | Available: "$4" | Usage: "$5}'
          echo "======================================"

      - type: button
        name: CheckNetworkBtn
        caption: "üåê Network Info"
        x: 220
        y: 95
        width: 180
        height: 35
        background_color: "#5E35B1"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "üåê NETWORK INFORMATION"
          echo "======================================"
          echo "Active Interfaces:"
          ip -brief addr show | grep -v 'DOWN' | awk '{printf "  %s: %s\n", $1, $3}'
          echo ""
          echo "Default Gateway:"
          ip route | grep default | awk '{print "  "$3" via "$5}'
          echo ""
          echo "DNS Servers:"
          if [ -f /etc/resolv.conf ]; then
            grep nameserver /etc/resolv.conf | awk '{print "  "$2}'
          fi
          echo "======================================"

      - type: button
        name: CheckTempsBtn
        caption: "üå°Ô∏è Temperatures"
        x: 20
        y: 140
        width: 180
        height: 35
        background_color: "#3949AB"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "üå°Ô∏è SYSTEM TEMPERATURES"
          echo "======================================"
          if command -v sensors &> /dev/null; then
            sensors | grep -E 'Core|temp'
          else
            echo "‚ö†Ô∏è  lm-sensors not installed"
            echo ""
            echo "CPU thermal zones:"
            for zone in /sys/class/thermal/thermal_zone*/temp; do
              if [ -f "$zone" ]; then
                temp=$(cat "$zone")
                temp_c=$((temp / 1000))
                echo "  Zone: ${temp_c}¬∞C"
              fi
            done
          fi
          echo "======================================"

      - type: button
        name: CheckBatteryBtn
        caption: "üîã Battery Status"
        x: 220
        y: 140
        width: 180
        height: 35
        background_color: "#1E88E5"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "üîã BATTERY STATUS"
          echo "======================================"
          if [ -d /sys/class/power_supply/BAT0 ]; then
            capacity=$(cat /sys/class/power_supply/BAT0/capacity 2>/dev/null || echo "N/A")
            status=$(cat /sys/class/power_supply/BAT0/status 2>/dev/null || echo "N/A")
            echo "Battery Level: ${capacity}%"
            echo "Status: ${status}"
          else
            echo "‚ö†Ô∏è  No battery detected (desktop system)"
          fi
          echo "======================================"

      - type: label
        name: HardwareStatusLabel
        caption: "‚úÖ Hardware Status: Healthy"
        x: 20
        y: 190
        width: 380
        height: 40
        font_size: 13
        font_bold: true
        foreground_color: "#1565C0"
        alignment: center

  # Services Panel
  - type: panel
    name: ServicesPanel
    x: 20
    y: 370
    width: 860
    height: 180
    background_color: "#ffffff"
    border_color: "#FF9800"
    border_thickness: 2
    controls:
      - type: label
        name: ServicesHeader
        caption: "‚öôÔ∏è SYSTEM SERVICES & DIAGNOSTICS"
        x: 10
        y: 10
        width: 840
        height: 30
        font_size: 14
        font_bold: true
        foreground_color: "#F57C00"

      - type: button
        name: FullSystemCheckBtn
        caption: "üîç FULL SYSTEM SCAN"
        x: 20
        y: 50
        width: 400
        height: 45
        background_color: "#D32F2F"
        foreground_color: "White"
        font_bold: true
        onClick: |
          echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
          echo "‚ïë  üîç COMPREHENSIVE SYSTEM ANALYSIS      ‚ïë"
          echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
          echo ""
          echo "üìã System: $(hostname) | $(date '+%Y-%m-%d %H:%M:%S')"
          echo "üë§ User: $(whoami) | Uptime: $(uptime -p)"
          echo ""
          echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
          echo "‚ö° CPU: $(nproc) cores | Load: $(uptime | awk -F'load average:' '{print $2}')"
          echo "üíæ RAM: $(free -h | awk 'NR==2{print $3"/"$2" ("$3/$2*100"%)"}')"
          echo "üíø Disk: $(df -h / | tail -1 | awk '{print $3"/"$2" ("$5")"}')"
          echo "üåê IP: $(hostname -I | awk '{print $1}')"
          echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
          echo ""
          echo "‚úÖ System check complete!"
          echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"

      - type: button
        name: CheckServicesBtn
        caption: "‚öôÔ∏è Active Services"
        x: 440
        y: 50
        width: 190
        height: 45
        background_color: "#F57C00"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "‚öôÔ∏è SYSTEM SERVICES"
          echo "======================================"
          if command -v systemctl &> /dev/null; then
            echo "Running services:"
            systemctl list-units --type=service --state=running --no-pager | head -10
          else
            echo "Service count: $(ps aux | wc -l)"
          fi
          echo "======================================"

      - type: button
        name: CheckLogsBtn
        caption: "üìú Recent Logs"
        x: 650
        y: 50
        width: 190
        height: 45
        background_color: "#EF6C00"
        foreground_color: "White"
        onClick: |
          echo "======================================"
          echo "üìú RECENT SYSTEM LOGS"
          echo "======================================"
          if command -v journalctl &> /dev/null; then
            echo "Last 10 system messages:"
            journalctl -n 10 --no-pager | tail -10
          else
            echo "Checking dmesg..."
            dmesg | tail -10
          fi
          echo "======================================"

      - type: button
        name: ExportReportBtn
        caption: "üíæ Export Report"
        x: 20
        y: 110
        width: 190
        height: 45
        background_color: "#43A047"
        foreground_color: "White"
        onClick: |
          REPORT="/tmp/system_report_$(date +%Y%m%d_%H%M%S).txt"
          echo "Generating system report..."
          {
            echo "========================================="
            echo "SYSTEM HEALTH REPORT"
            echo "Generated: $(date)"
            echo "========================================="
            echo ""
            echo "SYSTEM INFO:"
            echo "  Hostname: $(hostname)"
            echo "  OS: $(uname -s) $(uname -r)"
            echo "  Uptime: $(uptime -p)"
            echo ""
            echo "HARDWARE:"
            echo "  CPU: $(nproc) cores"
            echo "  RAM: $(free -h | awk 'NR==2{print $2}')"
            echo "  Disk: $(df -h / | tail -1 | awk '{print $2}')"
            echo ""
            echo "========================================="
          } > "$REPORT"
          echo "‚úÖ Report saved: $REPORT"

      - type: button
        name: ClearConsoleBtn
        caption: "üßπ Clear Console"
        x: 230
        y: 110
        width: 190
        height: 45
        background_color: "#546E7A"
        foreground_color: "White"
        onClick: |
          clear
          echo "‚ú® Console cleared!"
          echo ""
          echo "üñ•Ô∏è  System Health Monitor"
          echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
          echo "Click any button to run diagnostics"

      - type: button
        name: ExitBtn
        caption: "‚ùå EXIT"
        x: 650
        y: 110
        width: 190
        height: 45
        background_color: "#C62828"
        foreground_color: "White"
        font_bold: true
        onClick: |
          echo "üëã Exiting System Health Monitor..."
          echo "__CLOSE_WINDOW__"

  # Footer
  - type: label
    name: FooterLabel
    caption: "Built with Visualised Designer | Steve (recursion hurts my head) Wallis & Claude (you gimp, I'll code) Anthropic"
    x: 0
    y: 665
    width: 900
    height: 25
    font_size: 10
    foreground_color: "#777777"
    alignment: center

  # Animated status indicator
  - type: timer
    name: StatusTimer
    interval: 1000
    onTick: |
      echo "‚è±Ô∏è  $(date '+%H:%M:%S') | System monitoring active..."
